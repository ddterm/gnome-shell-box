name: box

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Box to build'
        type: string
        required: true

      publish:
        description: 'Publish to Vagrant Registry'
        type: boolean
        default: false
        required: false

  workflow_call:
    inputs:
      name:
        description: 'Box to build'
        type: string
        required: true

      publish:
        description: 'Publish to Vagrant Registry'
        type: boolean
        default: false
        required: false

    secrets:
      HCP_CLIENT_SECRET:
        description: 'HCP service principal client secret for publishing'
        required: false

env:
  # renovate: datasource=deb depName=packer
  PACKER_VERSION: '1.14.1-1'
  # renovate: datasource=deb depName=vagrant
  VAGRANT_VERSION: '2.4.8-1'

defaults:
  run:
    shell: bash

jobs:
  build:
    name: build ${{ inputs.name }}
    runs-on: ubuntu-24.04
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-hashicorp-repo

      - run: >-
          sudo apt-get install -y --no-install-recommends
          "packer=$PACKER_VERSION"
          qemu-system-x86
          qemu-system-modules-spice
          qemu-utils
          dnsmasq

      - uses: ./.github/actions/clean
      - uses: ./.github/actions/enable-kvm
      - run: mkdir -p logs

      - run: /usr/bin/packer init .
        env:
          PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: >-
          /usr/bin/packer build
          ${{ !inputs.publish && '-except vagrant-registry' || '' }}
          -only "$BUILD_NAME"
          .
          2>&1 | tee logs/packer.txt
        env:
          HCP_CLIENT_ID: ${{ vars.HCP_CLIENT_ID }}
          HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
          PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKER_LOG: 1
          BUILD_NAME: qemu.${{ inputs.name }}

      - run: du -h ./*.box

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.name }}-box
          path: '*.box'
          retention-days: 1
          compression-level: 0

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.name }}-build-logs
          path: logs
        if: ${{ !cancelled() }}

  test:
    name: test ${{ inputs.name }}
    needs: build
    runs-on: ubuntu-24.04
    timeout-minutes: 10

    env:
      VAGRANT_BOX_UPDATE_CHECK_DISABLE: 1
      VAGRANT_CHECKPOINT_DISABLE: 1
      VAGRANT_FORCE_COLOR: 1

    steps:
      - uses: actions/checkout@v5
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            .github/**
            test/**

      - uses: ./.github/actions/setup-hashicorp-repo

      - run: >-
          sudo apt-get install -y --no-install-recommends
          "vagrant=$VAGRANT_VERSION"
          qemu-system-x86
          qemu-system-modules-spice
          qemu-utils
          libvirt-daemon-system
          libvirt-dev
          dnsmasq

      - uses: ./.github/actions/clean
      - uses: ./.github/actions/enable-kvm
      - run: vagrant plugin install --verbose vagrant-libvirt

      - uses: actions/download-artifact@v5
        with:
          name: ${{ inputs.name }}-box

      - run: vagrant box add --clean --force --no-tty --name "$BOX_NAME" ./*.box
        env:
          BOX_NAME: ${{ inputs.name }}

      - run: rm ./*.box

      - run: vagrant init --template test/Vagrantfile.erb "$BOX_NAME"
        env:
          BOX_NAME: ${{ inputs.name }}

      - uses: ./.github/actions/setup-qemu-bridge
      - run: mkdir -p logs
      - run: vagrant up --no-tty --debug 2>&1 | tee logs/vagrant.txt

      - id: virt_domain_name
        run: echo "virt_domain_name=$(virsh --connect=qemu:///session --quiet list --name)" >>"$GITHUB_OUTPUT"

      - run: virsh --connect=qemu:///session screenshot "$VIRT_DOMAIN_NAME" --file logs/screenshot.png
        env:
          VIRT_DOMAIN_NAME: ${{ steps.virt_domain_name.outputs.virt_domain_name }}

      - run: vagrant destroy --force --graceful

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.name }}-test-logs
          path: logs
        if: ${{ !cancelled() }}
